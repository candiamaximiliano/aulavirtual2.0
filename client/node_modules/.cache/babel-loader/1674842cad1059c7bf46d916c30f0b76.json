{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Player from '@vimeo/player';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar eventNames = {\n  play: 'onPlay',\n  pause: 'onPause',\n  ended: 'onEnd',\n  timeupdate: 'onTimeUpdate',\n  progress: 'onProgress',\n  seeked: 'onSeeked',\n  texttrackchange: 'onTextTrackChange',\n  cuechange: 'onCueChange',\n  cuepoint: 'onCuePoint',\n  volumechange: 'onVolumeChange',\n  playbackratechange: 'onPlaybackRateChange',\n  error: 'onError',\n  loaded: 'onLoaded'\n};\n\nvar Vimeo = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Vimeo, _React$Component);\n\n  function Vimeo(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.refContainer = _this.refContainer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Vimeo.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.createPlayer();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this2 = this; // eslint-disable-next-line react/destructuring-assignment\n\n\n    var changes = Object.keys(this.props).filter(function (name) {\n      return _this2.props[name] !== prevProps[name];\n    });\n    this.updateProps(changes);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.player.destroy();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.getInitialOptions = function getInitialOptions() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      id: this.props.video,\n      width: this.props.width,\n      height: this.props.height,\n      autopause: this.props.autopause,\n      autoplay: this.props.autoplay,\n      byline: this.props.showByline,\n      color: this.props.color,\n      controls: this.props.controls,\n      loop: this.props.loop,\n      portrait: this.props.showPortrait,\n      title: this.props.showTitle,\n      muted: this.props.muted,\n      background: this.props.background,\n      responsive: this.props.responsive,\n      dnt: this.props.dnt,\n      speed: this.props.speed,\n      keyboard: this.props.keyboard,\n      pip: this.props.pip,\n      playsinline: this.props.playsInline,\n      quality: this.props.quality,\n      texttrack: this.props.textTrack,\n      transparent: this.props.transparent\n    };\n    /* eslint-enable react/destructuring-assignment */\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.updateProps = function updateProps(propNames) {\n    var _this3 = this;\n\n    var player = this.player;\n    propNames.forEach(function (name) {\n      // eslint-disable-next-line react/destructuring-assignment\n      var value = _this3.props[name];\n\n      switch (name) {\n        case 'autopause':\n          player.setAutopause(value);\n          break;\n\n        case 'color':\n          player.setColor(value);\n          break;\n\n        case 'loop':\n          player.setLoop(value);\n          break;\n\n        case 'volume':\n          player.setVolume(value);\n          break;\n\n        case 'paused':\n          player.getPaused().then(function (paused) {\n            if (value && !paused) {\n              return player.pause();\n            }\n\n            if (!value && paused) {\n              return player.play();\n            }\n\n            return null;\n          });\n          break;\n\n        case 'width':\n        case 'height':\n          player.element[name] = value;\n          break;\n\n        case 'video':\n          if (value) {\n            var start = _this3.props.start;\n            var loaded = player.loadVideo(value); // Set the start time only when loading a new video.\n            // It seems like this has to be done after the video has loaded, else it just starts at\n            // the beginning!\n\n            if (typeof start === 'number') {\n              loaded.then(function () {\n                player.setCurrentTime(start);\n              });\n            }\n          } else {\n            player.unload();\n          }\n\n          break;\n      }\n    });\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.createPlayer = function createPlayer() {\n    var _this4 = this;\n\n    var _this$props = this.props,\n        start = _this$props.start,\n        volume = _this$props.volume;\n    this.player = new Player(this.container, this.getInitialOptions());\n    Object.keys(eventNames).forEach(function (dmName) {\n      var reactName = eventNames[dmName];\n\n      _this4.player.on(dmName, function (event) {\n        // eslint-disable-next-line react/destructuring-assignment\n        var handler = _this4.props[reactName];\n\n        if (handler) {\n          handler(event);\n        }\n      });\n    });\n    var _this$props2 = this.props,\n        onError = _this$props2.onError,\n        onReady = _this$props2.onReady;\n    this.player.ready().then(function () {\n      if (onReady) {\n        onReady(_this4.player);\n      }\n    }, function (err) {\n      if (onError) {\n        onError(err);\n      } else {\n        throw err;\n      }\n    });\n\n    if (typeof start === 'number') {\n      this.player.setCurrentTime(start);\n    }\n\n    if (typeof volume === 'number') {\n      this.updateProps(['volume']);\n    }\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.refContainer = function refContainer(container) {\n    this.container = container;\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        id = _this$props3.id,\n        className = _this$props3.className,\n        style = _this$props3.style;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: id,\n      className: className,\n      style: style,\n      ref: this.refContainer\n    });\n  };\n\n  return Vimeo;\n}(React.Component);\n\nif (process.env.NODE_ENV !== 'production') {\n  Vimeo.propTypes = {\n    /**\n     * A Vimeo video ID or URL.\n     */\n    video: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * DOM ID for the player element.\n     */\n    id: PropTypes.string,\n\n    /**\n     * CSS className for the player element.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Inline style for container element.\n     */\n    style: PropTypes.object,\n    // eslint-disable-line react/forbid-prop-types\n\n    /**\n     * Width of the player element.\n     */\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Height of the player element.\n     */\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Pause the video.\n     */\n    paused: PropTypes.bool,\n    // eslint-disable-line react/no-unused-prop-types\n\n    /**\n     * The playback volume as a number between 0 and 1.\n     */\n    volume: PropTypes.number,\n\n    /**\n     * The time in seconds at which to start playing the video.\n     */\n    start: PropTypes.number,\n    // Player parameters\n\n    /**\n     * Pause this video automatically when another one plays.\n     */\n    autopause: PropTypes.bool,\n\n    /**\n     * Automatically start playback of the video. Note that this wonâ€™t work on\n     * some devices.\n     */\n    autoplay: PropTypes.bool,\n\n    /**\n     * Show the byline on the video.\n     */\n    showByline: PropTypes.bool,\n\n    /**\n     * Specify the color of the video controls. Colors may be overridden by the\n     * embed settings of the video. _(Ex: \"ef2f9f\")_\n     */\n    color: PropTypes.string,\n\n    /**\n     * Blocks the player from tracking any session data, including all cookies and analytics.\n     */\n    dnt: PropTypes.bool,\n    // Player controls\n\n    /**\n     * Hide all elements in the player (play bar, sharing buttons, etc).\n     */\n    controls: PropTypes.bool,\n\n    /**\n     * Play the video again when it reaches the end.\n     */\n    loop: PropTypes.bool,\n\n    /**\n     * Show the portrait on the video.\n     */\n    showPortrait: PropTypes.bool,\n\n    /**\n     * Show the title on the video.\n     */\n    showTitle: PropTypes.bool,\n\n    /**\n     * Starts in a muted state to help with autoplay\n     */\n    muted: PropTypes.bool,\n\n    /**\n     * Starts in a background state with no controls to help with autoplay\n     */\n    background: PropTypes.bool,\n\n    /**\n     * Enable responsive mode and resize according to parent element (experimental)\n     */\n    responsive: PropTypes.bool,\n\n    /**\n     * Enable playback rate controls (requires Vimeo PRO / Business account)\n     */\n    speed: PropTypes.bool,\n\n    /**\n     * Allows for keyboard input to trigger player events.\n     */\n    keyboard: PropTypes.bool,\n\n    /**\n     * Show the picture-in-picture button in the controlbar\n     * and enable the picture-in-picture API.\n     */\n    pip: PropTypes.bool,\n\n    /**\n     * Play video inline on mobile devices, to automatically\n     * go fullscreen on playback set this parameter to false.\n     */\n    playsInline: PropTypes.bool,\n\n    /**\n     * Vimeo Plus, PRO, and Business members can default\n     * an embedded video to a specific quality on desktop.\n     */\n    quality: PropTypes.string,\n\n    /**\n     * Turn captions/subtitles on for a specific language by default.\n     */\n    textTrack: PropTypes.string,\n\n    /**\n     * The responsive player and transparent background are enabled\n     * by default, to disable set this parameter to false.\n     */\n    transparent: PropTypes.bool,\n    // Events\n\n    /* eslint-disable react/no-unused-prop-types */\n\n    /**\n     * Sent when the Vimeo player API has loaded.\n     * Receives the Vimeo player object in the first parameter.\n     */\n    onReady: PropTypes.func,\n\n    /**\n     * Sent when the player triggers an error.\n     */\n    onError: PropTypes.func,\n\n    /**\n     * Triggered when the video plays.\n     */\n    onPlay: PropTypes.func,\n\n    /**\n     * Triggered when the video pauses.\n     */\n    onPause: PropTypes.func,\n\n    /**\n     * Triggered any time the video playback reaches the end.\n     * Note: when `loop` is turned on, the ended event will not fire.\n     */\n    onEnd: PropTypes.func,\n\n    /**\n     * Triggered as the `currentTime` of the video updates. It generally fires\n     * every 250ms, but it may vary depending on the browser.\n     */\n    onTimeUpdate: PropTypes.func,\n\n    /**\n     * Triggered as the video is loaded. Reports back the amount of the video\n     * that has been buffered.\n     */\n    onProgress: PropTypes.func,\n\n    /**\n     * Triggered when the player seeks to a specific time. An `onTimeUpdate`\n     * event will also be fired at the same time.\n     */\n    onSeeked: PropTypes.func,\n\n    /**\n     * Triggered when the active text track (captions/subtitles) changes. The\n     * values will be `null` if text tracks are turned off.\n     */\n    onTextTrackChange: PropTypes.func,\n\n    /**\n     * Triggered when the active cue for the current text track changes. It also\n     * fires when the active text track changes. There may be multiple cues\n     * active.\n     */\n    onCueChange: PropTypes.func,\n\n    /**\n     * Triggered when the current time hits a registered cue point.\n     */\n    onCuePoint: PropTypes.func,\n\n    /**\n     * Triggered when the volume in the player changes. Some devices do not\n     * support setting the volume of the video independently from the system\n     * volume, so this event will never fire on those devices.\n     */\n    onVolumeChange: PropTypes.func,\n\n    /**\n     * Triggered when the playback rate changes.\n     */\n    onPlaybackRateChange: PropTypes.func,\n\n    /**\n     * Triggered when a new video is loaded in the player.\n     */\n    onLoaded: PropTypes.func\n    /* eslint-enable react/no-unused-prop-types */\n\n  };\n}\n\nVimeo.defaultProps = {\n  autopause: true,\n  autoplay: false,\n  showByline: true,\n  controls: true,\n  loop: false,\n  showPortrait: true,\n  showTitle: true,\n  muted: false,\n  background: false,\n  responsive: false,\n  dnt: false,\n  speed: false,\n  keyboard: true,\n  pip: false,\n  playsInline: true,\n  transparent: true\n};\nexport { Vimeo as default };","map":{"version":3,"names":["React","PropTypes","Player","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","eventNames","play","pause","ended","timeupdate","progress","seeked","texttrackchange","cuechange","cuepoint","volumechange","playbackratechange","error","loaded","Vimeo","_React$Component","props","_this","call","refContainer","bind","_proto","componentDidMount","createPlayer","componentDidUpdate","prevProps","_this2","changes","keys","filter","name","updateProps","componentWillUnmount","player","destroy","getInitialOptions","id","video","width","height","autopause","autoplay","byline","showByline","color","controls","loop","portrait","showPortrait","title","showTitle","muted","background","responsive","dnt","speed","keyboard","pip","playsinline","playsInline","quality","texttrack","textTrack","transparent","propNames","_this3","forEach","value","setAutopause","setColor","setLoop","setVolume","getPaused","then","paused","element","start","loadVideo","setCurrentTime","unload","_this4","_this$props","volume","container","dmName","reactName","on","event","handler","_this$props2","onError","onReady","ready","err","render","_this$props3","className","style","createElement","ref","Component","process","env","NODE_ENV","propTypes","oneOfType","number","string","object","bool","func","onPlay","onPause","onEnd","onTimeUpdate","onProgress","onSeeked","onTextTrackChange","onCueChange","onCuePoint","onVolumeChange","onPlaybackRateChange","onLoaded","defaultProps","default"],"sources":["C:/Users/Maxim/Desktop/aulavirtual2.0/client/node_modules/@u-wave/react-vimeo/dist/react-vimeo.es.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Player from '@vimeo/player';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar eventNames = {\n  play: 'onPlay',\n  pause: 'onPause',\n  ended: 'onEnd',\n  timeupdate: 'onTimeUpdate',\n  progress: 'onProgress',\n  seeked: 'onSeeked',\n  texttrackchange: 'onTextTrackChange',\n  cuechange: 'onCueChange',\n  cuepoint: 'onCuePoint',\n  volumechange: 'onVolumeChange',\n  playbackratechange: 'onPlaybackRateChange',\n  error: 'onError',\n  loaded: 'onLoaded'\n};\n\nvar Vimeo = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Vimeo, _React$Component);\n\n  function Vimeo(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.refContainer = _this.refContainer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Vimeo.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.createPlayer();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this2 = this;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    var changes = Object.keys(this.props).filter(function (name) {\n      return _this2.props[name] !== prevProps[name];\n    });\n    this.updateProps(changes);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.player.destroy();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.getInitialOptions = function getInitialOptions() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      id: this.props.video,\n      width: this.props.width,\n      height: this.props.height,\n      autopause: this.props.autopause,\n      autoplay: this.props.autoplay,\n      byline: this.props.showByline,\n      color: this.props.color,\n      controls: this.props.controls,\n      loop: this.props.loop,\n      portrait: this.props.showPortrait,\n      title: this.props.showTitle,\n      muted: this.props.muted,\n      background: this.props.background,\n      responsive: this.props.responsive,\n      dnt: this.props.dnt,\n      speed: this.props.speed,\n      keyboard: this.props.keyboard,\n      pip: this.props.pip,\n      playsinline: this.props.playsInline,\n      quality: this.props.quality,\n      texttrack: this.props.textTrack,\n      transparent: this.props.transparent\n    };\n    /* eslint-enable react/destructuring-assignment */\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.updateProps = function updateProps(propNames) {\n    var _this3 = this;\n\n    var player = this.player;\n    propNames.forEach(function (name) {\n      // eslint-disable-next-line react/destructuring-assignment\n      var value = _this3.props[name];\n\n      switch (name) {\n        case 'autopause':\n          player.setAutopause(value);\n          break;\n\n        case 'color':\n          player.setColor(value);\n          break;\n\n        case 'loop':\n          player.setLoop(value);\n          break;\n\n        case 'volume':\n          player.setVolume(value);\n          break;\n\n        case 'paused':\n          player.getPaused().then(function (paused) {\n            if (value && !paused) {\n              return player.pause();\n            }\n\n            if (!value && paused) {\n              return player.play();\n            }\n\n            return null;\n          });\n          break;\n\n        case 'width':\n        case 'height':\n          player.element[name] = value;\n          break;\n\n        case 'video':\n          if (value) {\n            var start = _this3.props.start;\n            var loaded = player.loadVideo(value); // Set the start time only when loading a new video.\n            // It seems like this has to be done after the video has loaded, else it just starts at\n            // the beginning!\n\n            if (typeof start === 'number') {\n              loaded.then(function () {\n                player.setCurrentTime(start);\n              });\n            }\n          } else {\n            player.unload();\n          }\n\n          break;\n\n      }\n    });\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.createPlayer = function createPlayer() {\n    var _this4 = this;\n\n    var _this$props = this.props,\n        start = _this$props.start,\n        volume = _this$props.volume;\n    this.player = new Player(this.container, this.getInitialOptions());\n    Object.keys(eventNames).forEach(function (dmName) {\n      var reactName = eventNames[dmName];\n\n      _this4.player.on(dmName, function (event) {\n        // eslint-disable-next-line react/destructuring-assignment\n        var handler = _this4.props[reactName];\n\n        if (handler) {\n          handler(event);\n        }\n      });\n    });\n    var _this$props2 = this.props,\n        onError = _this$props2.onError,\n        onReady = _this$props2.onReady;\n    this.player.ready().then(function () {\n      if (onReady) {\n        onReady(_this4.player);\n      }\n    }, function (err) {\n      if (onError) {\n        onError(err);\n      } else {\n        throw err;\n      }\n    });\n\n    if (typeof start === 'number') {\n      this.player.setCurrentTime(start);\n    }\n\n    if (typeof volume === 'number') {\n      this.updateProps(['volume']);\n    }\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.refContainer = function refContainer(container) {\n    this.container = container;\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        id = _this$props3.id,\n        className = _this$props3.className,\n        style = _this$props3.style;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: id,\n      className: className,\n      style: style,\n      ref: this.refContainer\n    });\n  };\n\n  return Vimeo;\n}(React.Component);\n\nif (process.env.NODE_ENV !== 'production') {\n  Vimeo.propTypes = {\n    /**\n     * A Vimeo video ID or URL.\n     */\n    video: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * DOM ID for the player element.\n     */\n    id: PropTypes.string,\n\n    /**\n     * CSS className for the player element.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Inline style for container element.\n     */\n    style: PropTypes.object,\n    // eslint-disable-line react/forbid-prop-types\n\n    /**\n     * Width of the player element.\n     */\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Height of the player element.\n     */\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Pause the video.\n     */\n    paused: PropTypes.bool,\n    // eslint-disable-line react/no-unused-prop-types\n\n    /**\n     * The playback volume as a number between 0 and 1.\n     */\n    volume: PropTypes.number,\n\n    /**\n     * The time in seconds at which to start playing the video.\n     */\n    start: PropTypes.number,\n    // Player parameters\n\n    /**\n     * Pause this video automatically when another one plays.\n     */\n    autopause: PropTypes.bool,\n\n    /**\n     * Automatically start playback of the video. Note that this wonâ€™t work on\n     * some devices.\n     */\n    autoplay: PropTypes.bool,\n\n    /**\n     * Show the byline on the video.\n     */\n    showByline: PropTypes.bool,\n\n    /**\n     * Specify the color of the video controls. Colors may be overridden by the\n     * embed settings of the video. _(Ex: \"ef2f9f\")_\n     */\n    color: PropTypes.string,\n\n    /**\n     * Blocks the player from tracking any session data, including all cookies and analytics.\n     */\n    dnt: PropTypes.bool,\n    // Player controls\n\n    /**\n     * Hide all elements in the player (play bar, sharing buttons, etc).\n     */\n    controls: PropTypes.bool,\n\n    /**\n     * Play the video again when it reaches the end.\n     */\n    loop: PropTypes.bool,\n\n    /**\n     * Show the portrait on the video.\n     */\n    showPortrait: PropTypes.bool,\n\n    /**\n     * Show the title on the video.\n     */\n    showTitle: PropTypes.bool,\n\n    /**\n     * Starts in a muted state to help with autoplay\n     */\n    muted: PropTypes.bool,\n\n    /**\n     * Starts in a background state with no controls to help with autoplay\n     */\n    background: PropTypes.bool,\n\n    /**\n     * Enable responsive mode and resize according to parent element (experimental)\n     */\n    responsive: PropTypes.bool,\n\n    /**\n     * Enable playback rate controls (requires Vimeo PRO / Business account)\n     */\n    speed: PropTypes.bool,\n\n    /**\n     * Allows for keyboard input to trigger player events.\n     */\n    keyboard: PropTypes.bool,\n\n    /**\n     * Show the picture-in-picture button in the controlbar\n     * and enable the picture-in-picture API.\n     */\n    pip: PropTypes.bool,\n\n    /**\n     * Play video inline on mobile devices, to automatically\n     * go fullscreen on playback set this parameter to false.\n     */\n    playsInline: PropTypes.bool,\n\n    /**\n     * Vimeo Plus, PRO, and Business members can default\n     * an embedded video to a specific quality on desktop.\n     */\n    quality: PropTypes.string,\n\n    /**\n     * Turn captions/subtitles on for a specific language by default.\n     */\n    textTrack: PropTypes.string,\n\n    /**\n     * The responsive player and transparent background are enabled\n     * by default, to disable set this parameter to false.\n     */\n    transparent: PropTypes.bool,\n    // Events\n\n    /* eslint-disable react/no-unused-prop-types */\n\n    /**\n     * Sent when the Vimeo player API has loaded.\n     * Receives the Vimeo player object in the first parameter.\n     */\n    onReady: PropTypes.func,\n\n    /**\n     * Sent when the player triggers an error.\n     */\n    onError: PropTypes.func,\n\n    /**\n     * Triggered when the video plays.\n     */\n    onPlay: PropTypes.func,\n\n    /**\n     * Triggered when the video pauses.\n     */\n    onPause: PropTypes.func,\n\n    /**\n     * Triggered any time the video playback reaches the end.\n     * Note: when `loop` is turned on, the ended event will not fire.\n     */\n    onEnd: PropTypes.func,\n\n    /**\n     * Triggered as the `currentTime` of the video updates. It generally fires\n     * every 250ms, but it may vary depending on the browser.\n     */\n    onTimeUpdate: PropTypes.func,\n\n    /**\n     * Triggered as the video is loaded. Reports back the amount of the video\n     * that has been buffered.\n     */\n    onProgress: PropTypes.func,\n\n    /**\n     * Triggered when the player seeks to a specific time. An `onTimeUpdate`\n     * event will also be fired at the same time.\n     */\n    onSeeked: PropTypes.func,\n\n    /**\n     * Triggered when the active text track (captions/subtitles) changes. The\n     * values will be `null` if text tracks are turned off.\n     */\n    onTextTrackChange: PropTypes.func,\n\n    /**\n     * Triggered when the active cue for the current text track changes. It also\n     * fires when the active text track changes. There may be multiple cues\n     * active.\n     */\n    onCueChange: PropTypes.func,\n\n    /**\n     * Triggered when the current time hits a registered cue point.\n     */\n    onCuePoint: PropTypes.func,\n\n    /**\n     * Triggered when the volume in the player changes. Some devices do not\n     * support setting the volume of the video independently from the system\n     * volume, so this event will never fire on those devices.\n     */\n    onVolumeChange: PropTypes.func,\n\n    /**\n     * Triggered when the playback rate changes.\n     */\n    onPlaybackRateChange: PropTypes.func,\n\n    /**\n     * Triggered when a new video is loaded in the player.\n     */\n    onLoaded: PropTypes.func\n    /* eslint-enable react/no-unused-prop-types */\n\n  };\n}\n\nVimeo.defaultProps = {\n  autopause: true,\n  autoplay: false,\n  showByline: true,\n  controls: true,\n  loop: false,\n  showPortrait: true,\n  showTitle: true,\n  muted: false,\n  background: false,\n  responsive: false,\n  dnt: false,\n  speed: false,\n  keyboard: true,\n  pip: false,\n  playsInline: true,\n  transparent: true\n};\n\nexport { Vimeo as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}